{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"variant\", \"size\", \"style\", \"textStyle\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Button = function Button(_ref) {\n  var children = _ref.children,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'default' : _ref$variant,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'md' : _ref$size,\n    style = _ref.style,\n    textStyle = _ref.textStyle,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var getVariantStyle = function getVariantStyle() {\n    switch (variant) {\n      case 'outline':\n        return {\n          backgroundColor: 'transparent',\n          borderWidth: 1,\n          borderColor: '#000'\n        };\n      case 'ghost':\n        return {\n          backgroundColor: 'transparent'\n        };\n      default:\n        return {\n          backgroundColor: '#000'\n        };\n    }\n  };\n  var getSizeStyle = function getSizeStyle() {\n    switch (size) {\n      case 'sm':\n        return {\n          paddingVertical: 8,\n          paddingHorizontal: 16\n        };\n      case 'lg':\n        return {\n          paddingVertical: 16,\n          paddingHorizontal: 24\n        };\n      default:\n        return {\n          paddingVertical: 12,\n          paddingHorizontal: 20\n        };\n    }\n  };\n  var getTextColor = function getTextColor() {\n    switch (variant) {\n      case 'outline':\n      case 'ghost':\n        return '#000';\n      default:\n        return '#fff';\n    }\n  };\n  return _jsx(TouchableOpacity, _objectSpread(_objectSpread({\n    style: [styles.button, getVariantStyle(), getSizeStyle(), style]\n  }, props), {}, {\n    children: _jsx(Text, {\n      style: [styles.text, {\n        color: getTextColor()\n      }, textStyle],\n      children: children\n    })\n  }));\n};\nvar styles = StyleSheet.create({\n  button: {\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"names":["React","TouchableOpacity","Text","StyleSheet","jsx","_jsx","Button","_ref","children","_ref$variant","variant","_ref$size","size","style","textStyle","props","_objectWithoutProperties","_excluded","getVariantStyle","backgroundColor","borderWidth","borderColor","getSizeStyle","paddingVertical","paddingHorizontal","getTextColor","_objectSpread","styles","button","text","color","create","borderRadius","alignItems","justifyContent","fontSize","fontWeight"],"sources":["/project/sandbox/user-workspace/mobile-app/src/components/ui/Button.tsx"],"sourcesContent":["import React from 'react';\nimport { \n  TouchableOpacity, \n  Text, \n  StyleSheet, \n  TouchableOpacityProps, \n  ViewStyle, \n  TextStyle \n} from 'react-native';\n\ninterface ButtonProps extends TouchableOpacityProps {\n  children: React.ReactNode;\n  variant?: 'default' | 'outline' | 'ghost';\n  size?: 'sm' | 'md' | 'lg';\n  style?: ViewStyle;\n  textStyle?: TextStyle;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n  children,\n  variant = 'default',\n  size = 'md',\n  style,\n  textStyle,\n  ...props\n}) => {\n  const getVariantStyle = () => {\n    switch (variant) {\n      case 'outline':\n        return {\n          backgroundColor: 'transparent',\n          borderWidth: 1,\n          borderColor: '#000',\n        };\n      case 'ghost':\n        return {\n          backgroundColor: 'transparent',\n        };\n      default:\n        return {\n          backgroundColor: '#000',\n        };\n    }\n  };\n\n  const getSizeStyle = () => {\n    switch (size) {\n      case 'sm':\n        return {\n          paddingVertical: 8,\n          paddingHorizontal: 16,\n        };\n      case 'lg':\n        return {\n          paddingVertical: 16,\n          paddingHorizontal: 24,\n        };\n      default:\n        return {\n          paddingVertical: 12,\n          paddingHorizontal: 20,\n        };\n    }\n  };\n\n  const getTextColor = () => {\n    switch (variant) {\n      case 'outline':\n      case 'ghost':\n        return '#000';\n      default:\n        return '#fff';\n    }\n  };\n\n  return (\n    <TouchableOpacity\n      style={[\n        styles.button,\n        getVariantStyle(),\n        getSizeStyle(),\n        style,\n      ]}\n      {...props}\n    >\n      <Text style={[\n        styles.text,\n        { color: getTextColor() },\n        textStyle\n      ]}>\n        {children}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n});\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAkB1B,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAOpC;EAAA,IANJC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAAC,YAAA,GAAAF,IAAA,CACRG,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,SAAS,GAAAA,YAAA;IAAAE,SAAA,GAAAJ,IAAA,CACnBK,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,IAAI,GAAAA,SAAA;IACXE,KAAK,GAAAN,IAAA,CAALM,KAAK;IACLC,SAAS,GAAAP,IAAA,CAATO,SAAS;IACNC,KAAK,GAAAC,wBAAA,CAAAT,IAAA,EAAAU,SAAA;EAER,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,QAAQR,OAAO;MACb,KAAK,SAAS;QACZ,OAAO;UACLS,eAAe,EAAE,aAAa;UAC9BC,WAAW,EAAE,CAAC;UACdC,WAAW,EAAE;QACf,CAAC;MACH,KAAK,OAAO;QACV,OAAO;UACLF,eAAe,EAAE;QACnB,CAAC;MACH;QACE,OAAO;UACLA,eAAe,EAAE;QACnB,CAAC;IACL;EACF,CAAC;EAED,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,QAAQV,IAAI;MACV,KAAK,IAAI;QACP,OAAO;UACLW,eAAe,EAAE,CAAC;UAClBC,iBAAiB,EAAE;QACrB,CAAC;MACH,KAAK,IAAI;QACP,OAAO;UACLD,eAAe,EAAE,EAAE;UACnBC,iBAAiB,EAAE;QACrB,CAAC;MACH;QACE,OAAO;UACLD,eAAe,EAAE,EAAE;UACnBC,iBAAiB,EAAE;QACrB,CAAC;IACL;EACF,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,QAAQf,OAAO;MACb,KAAK,SAAS;MACd,KAAK,OAAO;QACV,OAAO,MAAM;MACf;QACE,OAAO,MAAM;IACjB;EACF,CAAC;EAED,OACEL,IAAA,CAACJ,gBAAgB,EAAAyB,aAAA,CAAAA,aAAA;IACfb,KAAK,EAAE,CACLc,MAAM,CAACC,MAAM,EACbV,eAAe,CAAC,CAAC,EACjBI,YAAY,CAAC,CAAC,EACdT,KAAK;EACL,GACEE,KAAK;IAAAP,QAAA,EAETH,IAAA,CAACH,IAAI;MAACW,KAAK,EAAE,CACXc,MAAM,CAACE,IAAI,EACX;QAAEC,KAAK,EAAEL,YAAY,CAAC;MAAE,CAAC,EACzBX,SAAS,CACT;MAAAN,QAAA,EACCA;IAAQ,CACL;EAAC,EACS,CAAC;AAEvB,CAAC;AAED,IAAMmB,MAAM,GAAGxB,UAAU,CAAC4B,MAAM,CAAC;EAC/BH,MAAM,EAAE;IACNI,YAAY,EAAE,CAAC;IACfC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDL,IAAI,EAAE;IACJM,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}