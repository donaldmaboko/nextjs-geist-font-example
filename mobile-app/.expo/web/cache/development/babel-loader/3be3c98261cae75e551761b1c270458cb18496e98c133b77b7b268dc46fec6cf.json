{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button } from \"../components/ui/Button\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var AuthScreen = function AuthScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var handlePhoneSignIn = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var response = yield fetch('http://127.0.0.1:5000/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: 'phone_user'\n          })\n        });\n        var data = yield response.json();\n        if (data.message === 'Login successful') {\n          navigation.navigate('Home');\n        }\n      } catch (error) {\n        Alert.alert('Error', 'Failed to sign in. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handlePhoneSignIn() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleGoogleSignIn = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var response = yield fetch('http://127.0.0.1:5000/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: 'google_user'\n          })\n        });\n        var data = yield response.json();\n        if (data.message === 'Login successful') {\n          navigation.navigate('Home');\n        }\n      } catch (error) {\n        Alert.alert('Error', 'Failed to sign in. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleGoogleSignIn() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Welcome to SuperApp\"\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        onPress: function onPress() {},\n        variant: \"default\",\n        style: styles.button,\n        children: \"Sign In with Phone\"\n      }), _jsx(Button, {\n        onPress: function onPress() {},\n        variant: \"outline\",\n        style: styles.button,\n        children: \"Sign In with Google\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30,\n    color: '#000'\n  },\n  buttonContainer: {\n    width: '100%',\n    gap: 10\n  },\n  button: {\n    width: '100%',\n    marginVertical: 5\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Alert","Button","jsx","_jsx","jsxs","_jsxs","AuthScreen","_ref","navigation","_useState","_useState2","_slicedToArray","loading","setLoading","handlePhoneSignIn","_ref2","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","username","data","json","message","navigate","error","alert","apply","arguments","handleGoogleSignIn","_ref3","style","styles","container","children","title","buttonContainer","onPress","variant","button","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","color","width","gap","marginVertical"],"sources":["/project/sandbox/user-workspace/mobile-app/src/screens/AuthScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Alert } from 'react-native';\nimport { Button } from '../components/ui/Button';\n\nexport const AuthScreen = ({ navigation }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handlePhoneSignIn = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username: 'phone_user' }),\n      });\n      const data = await response.json();\n      if (data.message === 'Login successful') {\n        navigation.navigate('Home');\n      }\n    } catch (error) {\n      Alert.alert('Error', 'Failed to sign in. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGoogleSignIn = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username: 'google_user' }),\n      });\n      const data = await response.json();\n      if (data.message === 'Login successful') {\n        navigation.navigate('Home');\n      }\n    } catch (error) {\n      Alert.alert('Error', 'Failed to sign in. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Welcome to SuperApp</Text>\n      <View style={styles.buttonContainer}>\n        <Button \n          onPress={() => {}} \n          variant=\"default\"\n          style={styles.button}\n        >\n          Sign In with Phone\n        </Button>\n        <Button \n          onPress={() => {}} \n          variant=\"outline\"\n          style={styles.button}\n        >\n          Sign In with Google\n        </Button>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#fff',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30,\n    color: '#000',\n  },\n  buttonContainer: {\n    width: '100%',\n    gap: 10,\n  },\n  button: {\n    width: '100%',\n    marginVertical: 5,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}